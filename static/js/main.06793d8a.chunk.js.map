{"version":3,"sources":["data/FeedbackOptions.js","components/Notification/index.jsx","components/Statistics/index.jsx","components/FeedbackOptions/index.jsx","components/Section/index.jsx","App.js","index.js"],"names":["FEEDBACK_OPTIONS","useStyles","createUseStyles","notification","color","Notification","message","classes","className","stat__list","display","flexDirection","justifyContent","alignItems","listStyle","paddingLeft","textAlign","stat__item","fontWeight","stat__total","stat__percentage","Statistics","good","neutral","bad","total","positivePercentage","list","margin","padding","item","marginRight","button","textTransform","border","outline","backgroundColor","borderRadius","cursor","transitionDuration","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Section","title","children","App","state","handleButtonClick","e","target","currentTarget","innerText","toLowerCase","setState","prevState","countTotalFeedback","Object","values","reduce","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06793d8a.chunk.js","sourcesContent":["const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\n\nexport default FEEDBACK_OPTIONS;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  notification: {\n    color: 'tomato',\n  },\n});\n\nconst Notification = ({ message }) => {\n  const classes = useStyles();\n\n  return <h3 className={classes.notification}>{message}</h3>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nimport Notification from '../Notification';\n\nconst useStyles = createUseStyles({\n  stat__list: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    listStyle: 'none',\n    paddingLeft: 15,\n    textAlign: 'center',\n  },\n  stat__item: {\n    fontWeight: 700,\n  },\n  stat__total: {\n    fontWeight: 700,\n    color: 'chocolate',\n  },\n  stat__percentage: {\n    fontWeight: 700,\n    color: 'green',\n  },\n});\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <ul className={classes.stat__list}>\n          <li className={classes.stat__item}>Good: {good}</li>\n          <li className={classes.stat__item}>Neutral: {neutral}</li>\n          <li className={classes.stat__item}>Bad: {bad}</li>\n          <li className={classes.stat__total}>Total: {total}</li>\n          <li className={classes.stat__percentage}>\n            Positive feedback: {positivePercentage}%\n          </li>\n        </ul>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  list: {\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    margin: [0, 0, 50, 0],\n    padding: 0,\n    textAlign: 'center',\n  },\n  item: {\n    '&:not(:last-child)': {\n      marginRight: 20,\n    },\n  },\n  button: {\n    padding: [5, 20],\n    textTransform: 'capitalize',\n    color: 'white',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: '#6776ce',\n    borderRadius: [7],\n    cursor: 'pointer',\n    transitionDuration: 350,\n\n    '&:hover': {\n      backgroundColor: '#303f9f',\n    },\n  },\n});\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const classes = useStyles();\n\n  return (\n    <ul className={classes.list}>\n      {options.map(option => (\n        <li className={classes.item} key={option}>\n          <button\n            className={classes.button}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n}\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\n\nimport FEEDBACK_OPTIONS from './data/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButtonClick = e => {\n    const target = e.currentTarget.innerText.toLowerCase();\n\n    this.setState(prevState => ({\n      [target]: prevState[target] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, item) => total + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    return total === 0 ? 0 : Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"content__container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handleButtonClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles/base.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}